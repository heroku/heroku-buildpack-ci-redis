#!/usr/bin/env bash

set -eo pipefail

indent() {
  sed -u 's/^/       /'
}

# Usage: $ set-env key value
set-env() {
  echo "export $1=$2" >> $PROFILE_PATH
}

mktmpdir() {
  dir=$(mktemp -t fakesu-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_DIR="$(dirname $(dirname $0))"
VALKEY_BUILD="$(mktmpdir valkey)"
INSTALL_DIR="$BUILD_DIR/.indyno/vendor/valkey"
PROFILE_PATH="$BUILD_DIR/.profile.d/valkey.sh"
SERVICE_MIN_VER="7"

DEFAULT_VERSION="8"
if [ -f "${ENV_DIR}/REDIS_VERSION" ]; then
  VERSION="$(cat ${ENV_DIR}/REDIS_VERSION)"
else
  VERSION="${DEFAULT_VERSION}"
fi

case "${VERSION}" in
  7|7.0|7.2) VERSION="7.2.9";;
  8|8.0|8.1) VERSION="8.1.1";;
esac

if dpkg --compare-versions "$VERSION" "lt" "${SERVICE_MIN_VER}"; then
  echo "!      Unsupported service version: $VERSION" && \
  echo "!      Set REDIS_VERSION to $SERVICE_MIN_VER or higher in your app.json" && \
  echo "!      See https://devcenter.heroku.com/articles/heroku-redis#version-support-and-legacy-infrastructure" && \
  exit 1
fi

echo "Using valkey version: ${VERSION}" | indent

mkdir -p $INSTALL_DIR
mkdir -p $(dirname $PROFILE_PATH)
mkdir -p $CACHE_DIR

CACHED_REDIS_DIR="${CACHE_DIR}/valkey_${STACK}_${VERSION}"

if [ ! -d "${CACHED_REDIS_DIR}" ]; then
	echo "-----> Downloading and installing valkey into slug"
	rm -rf "${CACHE_DIR}"/valkey_*
	cd $VALKEY_BUILD
	curl -Lf "https://github.com/valkey-io/valkey/archive/refs/tags/${VERSION}.tar.gz" -o "valkey-$VERSION.tar.gz"
	tar zxvf "valkey-$VERSION.tar.gz"
	cd "valkey-$VERSION"
	make BUILD_TLS=yes -j "$(nproc)"
	make PREFIX="${CACHED_REDIS_DIR}/" install
	cp -r "${CACHED_REDIS_DIR}"/* "${INSTALL_DIR}/"
else
	echo "-----> Fetching valkey from cache into slug"
	cp -r "${CACHED_REDIS_DIR}"/* "${INSTALL_DIR}/"
fi

set-env PATH '/app/.indyno/vendor/valkey/bin:$PATH'
PASSWORD=`openssl rand -hex 16`
export REDIS_URL="redis://:$PASSWORD@localhost:6379/"

set-env REDIS_URL "$REDIS_URL"
echo "export REDIS_URL=$REDIS_URL" >> $BUILDPACK_DIR/export
echo "echo requirepass $PASSWORD | valkey-server - &> /dev/null &" >> $PROFILE_PATH

# ensure the valkey-server is started during CI runs as the buildpack runner will terminate redis-server between buildpacks and .profile.d is too late
cat<<EOF > $BUILDPACK_DIR/background
PATH=$HOME/.indyno/vendor/valkey/bin:$PATH
export REDIS_URL="$REDIS_URL"
echo requirepass $PASSWORD | valkey-server - &> /dev/null &
EOF

echo "-----> Valkey done"
